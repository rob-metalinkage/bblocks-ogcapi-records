{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "description": "Normative records schema - adapted from https://raw.githubusercontent.com/opengeospatial/ogcapi-records/master/core/openapi/schemas/recordGeoJSON.yaml",
  "type": "object",
  "allOf": [
    {
      "$ref": "https://opengeospatial.github.io/bblocks/annotated-schemas/geo/features/feature/schema.json"
    }
  ],
  "required": [
    "id",
    "type",
    "geometry",
    "properties",
    "links"
  ],
  "properties": {
    "id": {
      "type": "string",
      "description": "A unique identifier of the catalog record.",
      "format": "uri"
    },
    "conformsTo": {
      "type": "array",
      "items": {
        "type": "string"
      }
    },
    "type": {
      "type": "string",
      "enum": [
        "Feature"
      ]
    },
    "time": {
      "oneOf": [
        {
          "enum": [
            null
          ]
        },
        {
          "$ref": "https://rob-metalinkage.github.io/bblocks-ogcapi-records/build/annotated/api/records/v1/schemas/time/schema.json"
        }
      ]
    },
    "geometry": {
      "oneOf": [
        {
          "enum": [
            null
          ]
        },
        {
          "$ref": "https://opengeospatial.github.io/bblocks/annotated-schemas/geo/common/data_types/geojson/schema.json#/properties/geometry"
        }
      ]
    },
    "properties": {
      "type": "object",
      "required": [
        "type",
        "title"
      ],
      "properties": {
        "created": {
          "type": "string",
          "description": "Date of creation of this record.",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "description": "The most recent date on which the record was changed.",
          "format": "date-time"
        },
        "type": {
          "type": "string",
          "description": "The nature or genre of the resource. The value should be a code, convenient for filtering records. Where available, a link to the canonical URI of the record type resource will be added to the 'links' property.",
          "maxLength": 64
        },
        "title": {
          "type": "string",
          "description": "A human-readable name given to the resource."
        },
        "description": {
          "type": "string",
          "description": "A free-text account of the resource."
        },
        "keywords": {
          "type": "array",
          "description": "The topic or topics of the resource. Typically represented using free-form keywords, tags, key phrases, or classification codes.",
          "items": {
            "type": "string"
          }
        },
        "language": {
          "description": "The language used for textual values in this record representation.",
          "$ref": "https://rob-metalinkage.github.io/bblocks-ogcapi-records/build/annotated/api/records/v1/schemas/language/schema.json"
        },
        "languages": {
          "type": "array",
          "description": "This list of languages in which this record is available.",
          "items": {
            "$ref": "https://rob-metalinkage.github.io/bblocks-ogcapi-records/build/annotated/api/records/v1/schemas/language/schema.json"
          }
        },
        "resourceLanguages": {
          "type": "array",
          "description": "The list of languages in which the resource described by this record is available.",
          "items": {
            "$ref": "https://rob-metalinkage.github.io/bblocks-ogcapi-records/build/annotated/api/records/v1/schemas/language/schema.json"
          }
        },
        "externalIds": {
          "type": "array",
          "description": "An identifier for the resource assigned by an external (to the catalog) entity.",
          "items": {
            "type": "object",
            "properties": {
              "scheme": {
                "type": "string",
                "description": "A reference to an authority or identifier for a knowledge organization system from which the external identifier was obtained. It is recommended that the identifier be a resolvable URI."
              },
              "value": {
                "type": "string",
                "description": "The value of the identifier."
              }
            },
            "required": [
              "value"
            ]
          }
        },
        "themes": {
          "type": "array",
          "description": "A knowledge organization system used to classify the resource.",
          "minItems": 1,
          "items": {
            "$ref": "https://rob-metalinkage.github.io/bblocks-ogcapi-records/build/annotated/api/records/v1/schemas/theme/schema.json"
          }
        },
        "formats": {
          "type": "array",
          "description": "A list of available distributions of the resource.",
          "items": {
            "type": "string"
          }
        },
        "contacts": {
          "type": "array",
          "description": "A list of contacts qualified by their role(s) in association to the record or the resource described by the record.",
          "items": {
            "$ref": "https://rob-metalinkage.github.io/bblocks-ogcapi-records/build/annotated/api/records/v1/schemas/contact/schema.json"
          }
        },
        "license": {
          "$ref": "https://rob-metalinkage.github.io/bblocks-ogcapi-records/build/annotated/api/records/v1/schemas/license/schema.json"
        },
        "rights": {
          "type": "string",
          "description": "A statement that concerns all rights not addressed by the license such as a copyright statement."
        }
      }
    },
    "links": {
      "type": "array",
      "items": {
        "$ref": "https://opengeospatial.github.io/bblocks/annotated-schemas/ogc-utils/json-link/schema.json"
      }
    },
    "linkTemplates": {
      "type": "array",
      "items": {
        "$ref": "https://rob-metalinkage.github.io/bblocks-ogcapi-records/build/annotated/api/records/v1/schemas/linkTemplate/schema.json"
      }
    }
  }
}